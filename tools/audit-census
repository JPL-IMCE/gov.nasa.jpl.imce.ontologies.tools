#!/usr/bin/env ruby

#--
#
#    $HeadURL$
#
#    $LastChangedRevision$
#    $LastChangedDate$
#
#    $LastChangedBy$
#
#    Copyright (c) 2008-2014 California Institute of Technology.
#    All rights reserved.
#
#++

require 'Application'
require 'rexml/document'

APPLICATION_NAME = 'audit-census'

class AuditCensusApplication < Application
  
  def run
    
    super
    
    if argv.empty?
      log(FATAL, 'no input file')
      exit 1
    end
    
    testsuites = []
    total = OpenStruct.new({'suite' => 'total', 'cases' => 0, 'failures' => 0})

    log(INFO, 'parsing input')
    audit = REXML::Document.new(ARGF)
    
    top = audit.get_elements('testsuites').first
    unless top
      log(FATAL, 'no testsuites found')
      exit 1
    end
    
    total_cases = 0
    total_failures = 0
    
    top.each_element('testsuite') do |testsuite|
      os = OpenStruct.new
      os.suite = testsuite.attributes['name']
      os.cases = testsuite.get_elements('testcase').length
      total.cases += os.cases
      os.failures = testsuite.get_elements('testcase/failure').length
      total.failures += os.failures
      testsuites << os
      log(DEBUG, os.inspect)
    end
    
    (testsuites.sort_by { |e| e.suite } << total).each do |ts|
      puts "%6d/%6d %s" % [ts.failures, ts.cases, ts.suite]
    end
    
    return 0
    
  end
end

exit(AuditCensusApplication.new(APPLICATION_NAME).start)
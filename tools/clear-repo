#!/usr/bin/env ruby

#--
#
#    $HeadURL$
#
#    $LastChangedRevision$
#    $LastChangedDate$
#
#    $LastChangedBy$
#
#    Copyright (c) 2008-2014 California Institute of Technology.
#    All rights reserved.
#
#++

require 'getoptlong'
require 'logger'
require 'open-uri'
require 'time'

require 'jpl/rdf/sesame'

# Define variables.

# Process arguments.

def usage
  warn 'clear-repo --host host --port port --path path --repo repo'
end

log_level = Logger::FATAL
host = 'localhost'
port = '8080'
path = 'openrdf-sesame'
repo = nil

GetoptLong.new(
[ '--help',    '-h',       GetoptLong::NO_ARGUMENT ],
[ '--debug',   '-d',       GetoptLong::NO_ARGUMENT ],
[ '--info',    '-i',       GetoptLong::NO_ARGUMENT ],
[ '--warn',    '-w',       GetoptLong::NO_ARGUMENT ],
[ '--repo',    '-r',       GetoptLong::REQUIRED_ARGUMENT ],
[ '--host',                GetoptLong::REQUIRED_ARGUMENT ],
[ '--port',                GetoptLong::REQUIRED_ARGUMENT ],
[ '--path',                GetoptLong::REQUIRED_ARGUMENT ]
).each do |opt, arg|
case opt
when "--help"
  usage
  exit 0
when "--debug"
  log_level = Logger::DEBUG
when "--info"
  log_level = Logger::INFO
when "--warn"
  log_level = Logger::WARN
when "--host"
  host = arg
when "--port"
  port = arg
when "--path"
  path = arg
when "--repo"
  repo = arg
else
  usage
  exit 1
end
end

unless host && port && path && repo
  usage
  exit 1
end

# Open log.

log = Logger.new(STDERR)
log.datetime_format = '%Y-%m-%d %H:%M:%S '
log.level = log_level

# Connect to Sesame server.

log.info('begin session')
session = RDF::Sesame::Session.new(host, port, path, log)
raise 'no session' unless session
log.info('find repo')
model = session.model(repo)
raise 'no model' unless model

# Delete model statements.

log.info('delete statements')
model.delete_statements

# Delete namespaces.

log.info('delete namespaces')
model.delete_namespaces

# End session.

log.info('end session')
session.finish
